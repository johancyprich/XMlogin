//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XMlogin.WSAPI_UserWS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="uStoreWSAPI", ConfigurationName="WSAPI_UserWS.UserWSSoap")]
    public interface UserWSSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetUserByEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        XMlogin.WSAPI_UserWS.User GetUserByEmail(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetUserByEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User> GetUserByEmailAsync(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetUserByEmailAndStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        XMlogin.WSAPI_UserWS.User GetUserByEmailAndStore(string username, string password, string email, int assignedToStoreId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetUserByEmailAndStore", ReplyAction="*")]
        System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User> GetUserByEmailAndStoreAsync(string username, string password, string email, int assignedToStoreId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        XMlogin.WSAPI_UserWS.User GetUser(string username, string password, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetUser", ReplyAction="*")]
        System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User> GetUserAsync(string username, string password, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetUserByExternalID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        XMlogin.WSAPI_UserWS.User GetUserByExternalID(string username, string password, string externalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetUserByExternalID", ReplyAction="*")]
        System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User> GetUserByExternalIDAsync(string username, string password, string externalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/ValidateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        bool ValidateUser(string username, string password, string email, string userPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/ValidateUser", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidateUserAsync(string username, string password, string email, string userPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/ValidateUserInStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        bool ValidateUserInStore(string username, string password, string email, string userPassword, int assignedToStoreID);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/ValidateUserInStore", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidateUserInStoreAsync(string username, string password, string email, string userPassword, int assignedToStoreID);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetUserByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        XMlogin.WSAPI_UserWS.User GetUserByCustomer(string username, string password, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetUserByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User> GetUserByCustomerAsync(string username, string password, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/AddCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        int AddCustomer(string username, string password, string firstName, string lastName, string email, string userPassword, string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/AddCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddCustomerAsync(string username, string password, string firstName, string lastName, string email, string userPassword, string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/AddUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        int AddUser(string username, string password, string firstName, string lastName, string email, string userPassword, string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/AddUser", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddUserAsync(string username, string password, string firstName, string lastName, string email, string userPassword, string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/AddUserInStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        int AddUserInStore(string username, string password, string firstName, string lastName, string email, string userPassword, string externalId, int assignedToStoreId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/AddUserInStore", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddUserInStoreAsync(string username, string password, string firstName, string lastName, string email, string userPassword, string externalId, int assignedToStoreId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/UpdateCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        void UpdateCustomer(string username, string password, int userId, string firstName, string lastName, string email, string userPassword, string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/UpdateCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateCustomerAsync(string username, string password, int userId, string firstName, string lastName, string email, string userPassword, string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/UpdateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        void UpdateUser(string username, string password, int userId, string firstName, string lastName, string email, string userPassword, string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/UpdateUser", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateUserAsync(string username, string password, int userId, string firstName, string lastName, string email, string userPassword, string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/UpdateUserDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        void UpdateUserDetails(string username, string password, XMlogin.WSAPI_UserWS.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/UpdateUserDetails", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateUserDetailsAsync(string username, string password, XMlogin.WSAPI_UserWS.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetStoreAdministratorList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        XMlogin.WSAPI_UserWS.User[] GetStoreAdministratorList(string username, string password, int storeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetStoreAdministratorList", ReplyAction="*")]
        System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User[]> GetStoreAdministratorListAsync(string username, string password, int storeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetStoreOperatorList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        XMlogin.WSAPI_UserWS.User[] GetStoreOperatorList(string username, string password, int storeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetStoreOperatorList", ReplyAction="*")]
        System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User[]> GetStoreOperatorListAsync(string username, string password, int storeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSuperUserList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        XMlogin.WSAPI_UserWS.User[] GetSuperUserList(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSuperUserList", ReplyAction="*")]
        System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User[]> GetSuperUserListAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSingleSignonUrlToWelcomePage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        string GetSingleSignonUrlToWelcomePage(string username, string password, string email, int storeId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSingleSignonUrlToWelcomePage", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSingleSignonUrlToWelcomePageAsync(string username, string password, string email, int storeId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSingleSignonUrlToProductGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        string GetSingleSignonUrlToProductGroup(string username, string password, string email, int productGroupId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSingleSignonUrlToProductGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSingleSignonUrlToProductGroupAsync(string username, string password, string email, int productGroupId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSingleSignonUrlToProductDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        string GetSingleSignonUrlToProductDetails(string username, string password, string email, int productId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSingleSignonUrlToProductDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSingleSignonUrlToProductDetailsAsync(string username, string password, string email, int productId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSingleSignonUrlToProductDetailsUsingExternalId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        string GetSingleSignonUrlToProductDetailsUsingExternalId(string username, string password, string email, int storeId, string externalProductId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSingleSignonUrlToProductDetailsUsingExternalId", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSingleSignonUrlToProductDetailsUsingExternalIdAsync(string username, string password, string email, int storeId, string externalProductId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSingleSigonUrlToOrderWizard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        string GetSingleSigonUrlToOrderWizard(string username, string password, string email, int productId, int orderProductId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSingleSigonUrlToOrderWizard", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSingleSigonUrlToOrderWizardAsync(string username, string password, string email, int productId, int orderProductId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSingleSignonUrlToFinalizePage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        string GetSingleSignonUrlToFinalizePage(string username, string password, string email, int orderProductId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSingleSignonUrlToFinalizePage", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSingleSignonUrlToFinalizePageAsync(string username, string password, string email, int orderProductId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSingleSignOnUrl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        string GetSingleSignOnUrl(string username, string password, string email, string userPassword, int storeId, int productId, int cultureId, string logoutUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/GetSingleSignOnUrl", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSingleSignOnUrlAsync(string username, string password, string email, string userPassword, int storeId, int productId, int cultureId, string logoutUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/MergeUserData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReturnObject))]
        void MergeUserData(string username, string password, int fromUserId, int toUserId, int storeId, int cultureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uStoreWSAPI/MergeUserData", ReplyAction="*")]
        System.Threading.Tasks.Task MergeUserDataAsync(string username, string password, int fromUserId, int toUserId, int storeId, int cultureId);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="uStoreWSAPI")]
    public partial class User : ReturnObject {
        
        private int userIDField;
        
        private string loginField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private int createdLoginSessionIDField;
        
        private System.DateTime createdDateField;
        
        private int modifiedLoginSessionIDField;
        
        private System.DateTime modifiedDateField;
        
        private int statusIDField;
        
        private string externalIDField;
        
        private string phoneNumberField;
        
        private string mobileNumberField;
        
        private string faxNumberField;
        
        private string companyNameField;
        
        private string departmentField;
        
        private string jobTitleField;
        
        private bool isActivatedField;
        
        private bool isLockedField;
        
        private int assignedToStoreIDField;
        
        private int genderIDField;
        
        private System.DateTime birthDayField;
        
        private string custom1Field;
        
        private string custom2Field;
        
        private string custom3Field;
        
        private string custom4Field;
        
        private string custom5Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
                this.RaisePropertyChanged("Login");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int CreatedLoginSessionID {
            get {
                return this.createdLoginSessionIDField;
            }
            set {
                this.createdLoginSessionIDField = value;
                this.RaisePropertyChanged("CreatedLoginSessionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
                this.RaisePropertyChanged("CreatedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int ModifiedLoginSessionID {
            get {
                return this.modifiedLoginSessionIDField;
            }
            set {
                this.modifiedLoginSessionIDField = value;
                this.RaisePropertyChanged("ModifiedLoginSessionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
                this.RaisePropertyChanged("ModifiedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int StatusID {
            get {
                return this.statusIDField;
            }
            set {
                this.statusIDField = value;
                this.RaisePropertyChanged("StatusID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string ExternalID {
            get {
                return this.externalIDField;
            }
            set {
                this.externalIDField = value;
                this.RaisePropertyChanged("ExternalID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
                this.RaisePropertyChanged("PhoneNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string MobileNumber {
            get {
                return this.mobileNumberField;
            }
            set {
                this.mobileNumberField = value;
                this.RaisePropertyChanged("MobileNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string FaxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
                this.RaisePropertyChanged("FaxNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
                this.RaisePropertyChanged("CompanyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
                this.RaisePropertyChanged("Department");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string JobTitle {
            get {
                return this.jobTitleField;
            }
            set {
                this.jobTitleField = value;
                this.RaisePropertyChanged("JobTitle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public bool IsActivated {
            get {
                return this.isActivatedField;
            }
            set {
                this.isActivatedField = value;
                this.RaisePropertyChanged("IsActivated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public bool IsLocked {
            get {
                return this.isLockedField;
            }
            set {
                this.isLockedField = value;
                this.RaisePropertyChanged("IsLocked");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public int AssignedToStoreID {
            get {
                return this.assignedToStoreIDField;
            }
            set {
                this.assignedToStoreIDField = value;
                this.RaisePropertyChanged("AssignedToStoreID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public int GenderID {
            get {
                return this.genderIDField;
            }
            set {
                this.genderIDField = value;
                this.RaisePropertyChanged("GenderID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public System.DateTime BirthDay {
            get {
                return this.birthDayField;
            }
            set {
                this.birthDayField = value;
                this.RaisePropertyChanged("BirthDay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string Custom1 {
            get {
                return this.custom1Field;
            }
            set {
                this.custom1Field = value;
                this.RaisePropertyChanged("Custom1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string Custom2 {
            get {
                return this.custom2Field;
            }
            set {
                this.custom2Field = value;
                this.RaisePropertyChanged("Custom2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string Custom3 {
            get {
                return this.custom3Field;
            }
            set {
                this.custom3Field = value;
                this.RaisePropertyChanged("Custom3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public string Custom4 {
            get {
                return this.custom4Field;
            }
            set {
                this.custom4Field = value;
                this.RaisePropertyChanged("Custom4");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string Custom5 {
            get {
                return this.custom5Field;
            }
            set {
                this.custom5Field = value;
                this.RaisePropertyChanged("Custom5");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(User))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="uStoreWSAPI")]
    public abstract partial class ReturnObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UserWSSoapChannel : XMlogin.WSAPI_UserWS.UserWSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserWSSoapClient : System.ServiceModel.ClientBase<XMlogin.WSAPI_UserWS.UserWSSoap>, XMlogin.WSAPI_UserWS.UserWSSoap {
        
        public UserWSSoapClient() {
        }
        
        public UserWSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserWSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserWSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public XMlogin.WSAPI_UserWS.User GetUserByEmail(string username, string password, string email) {
            return base.Channel.GetUserByEmail(username, password, email);
        }
        
        public System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User> GetUserByEmailAsync(string username, string password, string email) {
            return base.Channel.GetUserByEmailAsync(username, password, email);
        }
        
        public XMlogin.WSAPI_UserWS.User GetUserByEmailAndStore(string username, string password, string email, int assignedToStoreId) {
            return base.Channel.GetUserByEmailAndStore(username, password, email, assignedToStoreId);
        }
        
        public System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User> GetUserByEmailAndStoreAsync(string username, string password, string email, int assignedToStoreId) {
            return base.Channel.GetUserByEmailAndStoreAsync(username, password, email, assignedToStoreId);
        }
        
        public XMlogin.WSAPI_UserWS.User GetUser(string username, string password, int userId) {
            return base.Channel.GetUser(username, password, userId);
        }
        
        public System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User> GetUserAsync(string username, string password, int userId) {
            return base.Channel.GetUserAsync(username, password, userId);
        }
        
        public XMlogin.WSAPI_UserWS.User GetUserByExternalID(string username, string password, string externalID) {
            return base.Channel.GetUserByExternalID(username, password, externalID);
        }
        
        public System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User> GetUserByExternalIDAsync(string username, string password, string externalID) {
            return base.Channel.GetUserByExternalIDAsync(username, password, externalID);
        }
        
        public bool ValidateUser(string username, string password, string email, string userPassword) {
            return base.Channel.ValidateUser(username, password, email, userPassword);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateUserAsync(string username, string password, string email, string userPassword) {
            return base.Channel.ValidateUserAsync(username, password, email, userPassword);
        }
        
        public bool ValidateUserInStore(string username, string password, string email, string userPassword, int assignedToStoreID) {
            return base.Channel.ValidateUserInStore(username, password, email, userPassword, assignedToStoreID);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateUserInStoreAsync(string username, string password, string email, string userPassword, int assignedToStoreID) {
            return base.Channel.ValidateUserInStoreAsync(username, password, email, userPassword, assignedToStoreID);
        }
        
        public XMlogin.WSAPI_UserWS.User GetUserByCustomer(string username, string password, int customerId) {
            return base.Channel.GetUserByCustomer(username, password, customerId);
        }
        
        public System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User> GetUserByCustomerAsync(string username, string password, int customerId) {
            return base.Channel.GetUserByCustomerAsync(username, password, customerId);
        }
        
        public int AddCustomer(string username, string password, string firstName, string lastName, string email, string userPassword, string externalId) {
            return base.Channel.AddCustomer(username, password, firstName, lastName, email, userPassword, externalId);
        }
        
        public System.Threading.Tasks.Task<int> AddCustomerAsync(string username, string password, string firstName, string lastName, string email, string userPassword, string externalId) {
            return base.Channel.AddCustomerAsync(username, password, firstName, lastName, email, userPassword, externalId);
        }
        
        public int AddUser(string username, string password, string firstName, string lastName, string email, string userPassword, string externalId) {
            return base.Channel.AddUser(username, password, firstName, lastName, email, userPassword, externalId);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(string username, string password, string firstName, string lastName, string email, string userPassword, string externalId) {
            return base.Channel.AddUserAsync(username, password, firstName, lastName, email, userPassword, externalId);
        }
        
        public int AddUserInStore(string username, string password, string firstName, string lastName, string email, string userPassword, string externalId, int assignedToStoreId) {
            return base.Channel.AddUserInStore(username, password, firstName, lastName, email, userPassword, externalId, assignedToStoreId);
        }
        
        public System.Threading.Tasks.Task<int> AddUserInStoreAsync(string username, string password, string firstName, string lastName, string email, string userPassword, string externalId, int assignedToStoreId) {
            return base.Channel.AddUserInStoreAsync(username, password, firstName, lastName, email, userPassword, externalId, assignedToStoreId);
        }
        
        public void UpdateCustomer(string username, string password, int userId, string firstName, string lastName, string email, string userPassword, string externalId) {
            base.Channel.UpdateCustomer(username, password, userId, firstName, lastName, email, userPassword, externalId);
        }
        
        public System.Threading.Tasks.Task UpdateCustomerAsync(string username, string password, int userId, string firstName, string lastName, string email, string userPassword, string externalId) {
            return base.Channel.UpdateCustomerAsync(username, password, userId, firstName, lastName, email, userPassword, externalId);
        }
        
        public void UpdateUser(string username, string password, int userId, string firstName, string lastName, string email, string userPassword, string externalId) {
            base.Channel.UpdateUser(username, password, userId, firstName, lastName, email, userPassword, externalId);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(string username, string password, int userId, string firstName, string lastName, string email, string userPassword, string externalId) {
            return base.Channel.UpdateUserAsync(username, password, userId, firstName, lastName, email, userPassword, externalId);
        }
        
        public void UpdateUserDetails(string username, string password, XMlogin.WSAPI_UserWS.User user) {
            base.Channel.UpdateUserDetails(username, password, user);
        }
        
        public System.Threading.Tasks.Task UpdateUserDetailsAsync(string username, string password, XMlogin.WSAPI_UserWS.User user) {
            return base.Channel.UpdateUserDetailsAsync(username, password, user);
        }
        
        public XMlogin.WSAPI_UserWS.User[] GetStoreAdministratorList(string username, string password, int storeId) {
            return base.Channel.GetStoreAdministratorList(username, password, storeId);
        }
        
        public System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User[]> GetStoreAdministratorListAsync(string username, string password, int storeId) {
            return base.Channel.GetStoreAdministratorListAsync(username, password, storeId);
        }
        
        public XMlogin.WSAPI_UserWS.User[] GetStoreOperatorList(string username, string password, int storeId) {
            return base.Channel.GetStoreOperatorList(username, password, storeId);
        }
        
        public System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User[]> GetStoreOperatorListAsync(string username, string password, int storeId) {
            return base.Channel.GetStoreOperatorListAsync(username, password, storeId);
        }
        
        public XMlogin.WSAPI_UserWS.User[] GetSuperUserList(string username, string password) {
            return base.Channel.GetSuperUserList(username, password);
        }
        
        public System.Threading.Tasks.Task<XMlogin.WSAPI_UserWS.User[]> GetSuperUserListAsync(string username, string password) {
            return base.Channel.GetSuperUserListAsync(username, password);
        }
        
        public string GetSingleSignonUrlToWelcomePage(string username, string password, string email, int storeId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId) {
            return base.Channel.GetSingleSignonUrlToWelcomePage(username, password, email, storeId, cultureId, addToCartUrl, logoutUrl, cancelUrl, currencyId);
        }
        
        public System.Threading.Tasks.Task<string> GetSingleSignonUrlToWelcomePageAsync(string username, string password, string email, int storeId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId) {
            return base.Channel.GetSingleSignonUrlToWelcomePageAsync(username, password, email, storeId, cultureId, addToCartUrl, logoutUrl, cancelUrl, currencyId);
        }
        
        public string GetSingleSignonUrlToProductGroup(string username, string password, string email, int productGroupId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId) {
            return base.Channel.GetSingleSignonUrlToProductGroup(username, password, email, productGroupId, cultureId, addToCartUrl, logoutUrl, cancelUrl, currencyId);
        }
        
        public System.Threading.Tasks.Task<string> GetSingleSignonUrlToProductGroupAsync(string username, string password, string email, int productGroupId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId) {
            return base.Channel.GetSingleSignonUrlToProductGroupAsync(username, password, email, productGroupId, cultureId, addToCartUrl, logoutUrl, cancelUrl, currencyId);
        }
        
        public string GetSingleSignonUrlToProductDetails(string username, string password, string email, int productId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId) {
            return base.Channel.GetSingleSignonUrlToProductDetails(username, password, email, productId, cultureId, addToCartUrl, logoutUrl, cancelUrl, currencyId);
        }
        
        public System.Threading.Tasks.Task<string> GetSingleSignonUrlToProductDetailsAsync(string username, string password, string email, int productId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId) {
            return base.Channel.GetSingleSignonUrlToProductDetailsAsync(username, password, email, productId, cultureId, addToCartUrl, logoutUrl, cancelUrl, currencyId);
        }
        
        public string GetSingleSignonUrlToProductDetailsUsingExternalId(string username, string password, string email, int storeId, string externalProductId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId) {
            return base.Channel.GetSingleSignonUrlToProductDetailsUsingExternalId(username, password, email, storeId, externalProductId, cultureId, addToCartUrl, logoutUrl, cancelUrl, currencyId);
        }
        
        public System.Threading.Tasks.Task<string> GetSingleSignonUrlToProductDetailsUsingExternalIdAsync(string username, string password, string email, int storeId, string externalProductId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId) {
            return base.Channel.GetSingleSignonUrlToProductDetailsUsingExternalIdAsync(username, password, email, storeId, externalProductId, cultureId, addToCartUrl, logoutUrl, cancelUrl, currencyId);
        }
        
        public string GetSingleSigonUrlToOrderWizard(string username, string password, string email, int productId, int orderProductId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId) {
            return base.Channel.GetSingleSigonUrlToOrderWizard(username, password, email, productId, orderProductId, cultureId, addToCartUrl, logoutUrl, cancelUrl, currencyId);
        }
        
        public System.Threading.Tasks.Task<string> GetSingleSigonUrlToOrderWizardAsync(string username, string password, string email, int productId, int orderProductId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId) {
            return base.Channel.GetSingleSigonUrlToOrderWizardAsync(username, password, email, productId, orderProductId, cultureId, addToCartUrl, logoutUrl, cancelUrl, currencyId);
        }
        
        public string GetSingleSignonUrlToFinalizePage(string username, string password, string email, int orderProductId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId) {
            return base.Channel.GetSingleSignonUrlToFinalizePage(username, password, email, orderProductId, cultureId, addToCartUrl, logoutUrl, cancelUrl, currencyId);
        }
        
        public System.Threading.Tasks.Task<string> GetSingleSignonUrlToFinalizePageAsync(string username, string password, string email, int orderProductId, int cultureId, string addToCartUrl, string logoutUrl, string cancelUrl, int currencyId) {
            return base.Channel.GetSingleSignonUrlToFinalizePageAsync(username, password, email, orderProductId, cultureId, addToCartUrl, logoutUrl, cancelUrl, currencyId);
        }
        
        public string GetSingleSignOnUrl(string username, string password, string email, string userPassword, int storeId, int productId, int cultureId, string logoutUrl) {
            return base.Channel.GetSingleSignOnUrl(username, password, email, userPassword, storeId, productId, cultureId, logoutUrl);
        }
        
        public System.Threading.Tasks.Task<string> GetSingleSignOnUrlAsync(string username, string password, string email, string userPassword, int storeId, int productId, int cultureId, string logoutUrl) {
            return base.Channel.GetSingleSignOnUrlAsync(username, password, email, userPassword, storeId, productId, cultureId, logoutUrl);
        }
        
        public void MergeUserData(string username, string password, int fromUserId, int toUserId, int storeId, int cultureId) {
            base.Channel.MergeUserData(username, password, fromUserId, toUserId, storeId, cultureId);
        }
        
        public System.Threading.Tasks.Task MergeUserDataAsync(string username, string password, int fromUserId, int toUserId, int storeId, int cultureId) {
            return base.Channel.MergeUserDataAsync(username, password, fromUserId, toUserId, storeId, cultureId);
        }
    }
}
